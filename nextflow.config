// nextflow.config

params {

	//general settings
	output_dir			= 'results'
	meta_file			= 'meta_data/sample_sheet.csv' // sample file with header having sampleId, file_name...
	meta_dir			= 'meta_data'
	guppy_is_cpu			= true 					// write false if you want to run on GPU
	fast5_dir			= '/export/home4/sk312p/projects/artic-nf_dev_version/raw_files/fast5'
	fastq_dir			= 'raw_files/fastq'
	guppy_dir			= '/export/home4/sk312p/projects/artic-nf_dev_version/ont-guppy-cpu/bin'
	primer_schema	                = '/export/home4/sk312p/projects/artic-nf_dev_version/meta_data/primer-schemes'
	fq_extension			= '.fastq'
	script				= 'scripts'
	threads				= 5 // number of cpus to use (for medaka, samtools, minimap2 etc)

	//guppy CPU settings
	//guppy_dir			= 'ont-guppy-cpu/bin'
	guppy_config			= 'dna_r9.4.1_450bps_fast.cfg' 		// change according to your data
	guppy_cpu_threads		= 4

	//guppy GPU settings
	//settings here

	//guppy barcoder setting
	guppy_barcode_kits		= 'EXP-NBD104'

	// guppy plex setting
	guppy_seq_len			= 350

	//medaka settings
	medaka_model			= 'r941_min_fast_g303'
	medaka_normalise	 	= 200 					//default value by medaka
}

conda {
	conda.enabled			= true
	docker.enabled			= false
	singularity.enabled		= false
	podman.enabled			= false
	shifter.enabled			= false
	charliecloud.enabled		= false
	apptainer.enabled		= false
}

manifest {

    	name				= 'RAGE-toolkit/Artic-nf'
    	author				= 'RAGE-toolkit'
    	homePage			= 'https://github.com/RAGE-toolkit/Artic-nf'
    	description			= 'Basecalling and consensus alignment'
    	mainScript			= 'main.nf'
    	nextflowVersion			= '23.10.0'
    	version				= 'v1.0.0'

}

//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    out_dir = "output"
    version = false
    fastq = null
    bam = null
    references = null
    counts = null
    prefix = null
    sample = null
    sample_sheet = null
    disable_ping = false
    depth_coverage = true
    analyse_unclassified = false
    minimap_preset = "dna"
    minimap_args = null
    threads = 4

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        example_cmd = [
            "--fastq 'wf-alignment-demo/fastq'",
            "--references 'wf-alignment-demo/references'",
        ]
        container_sha = "shaa9faef16822c5aa48366a4c45b401c9233a6c0f7"
        common_sha = "sha399b89c275a4d8eac477a415691cb93180661be6"
    }
}


manifest {
    name            = 'epi2me-labs/wf-alignment'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-alignment'
    description     = 'Align Nanopore reads and visualize mapping statistics.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.0.2'
}

epi2melabs {
    tags = 'alignment,mapping,minimap2'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfalignment {
        container = "ontresearch/wf-alignment:${params.wf.container_sha}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitly by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}
