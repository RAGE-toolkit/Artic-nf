// nextflow.config

params {

	//general settings
	output_dir					= 'results'
	meta_file						= 'meta_data/sample_sheet.csv'	// sample file with header having sampleId, file_name...
	basecaller					= 'Dorado'			// availabel ['Dorado', 'Guppy']
	rawfile_type				= 'fast5_pod5'				// available ['fastq', 'fast5_pod5']
	rawfile_dir					= '/home3/sk312p/task_dir/projects/Artic_nf_development_version/workshop/barcode01/'
	//rawfile_dir				= '/home3/sk312p/task_dir/projects/Artic_nf_02022024/raw_files/run_data/pod5/RABV_tza_aphaBatchJan2024/glasgow_run/fastq_pass'
	fastq_dir						= 'raw_files/fastq'
	primer_schema	  		= '"/home3/sk312p/task_dir/projects/Artic_nf_development_version/meta_data/primer-schemes'
	kit_name						= 'SQK-NBD114-24'
	fq_extension				= '.fastq'
	script							= 'scripts'
	threads							= 5 // number of cpus to use (for medaka, samtools, minimap2 etc)
	weeSAM							= '/home3/sk312p/task_dir/tools/weeSAM'

	// dorado setting
	dorado_dir					= '/home3/sk312p/task_dir/tools/dorado-0.4.3-linux-x64'
	//dorado_config			= 'dna_r9.4.1_e8_fast@v3.4'
	dorado_config				= 'dna_r10.4.1_e8.2_400bps_fast@v4.2.0'
	dorado_run_mode			= 'cuda:0'

	//guppy settings
	guppy_dir						= '/home3/sk312p/task_dir/tools/ont-guppy'
	guppy_config				= 'dna_r9.4.1_450bps_fast.cfg' 		// change according to your data
	guppy_cpu_threads		= 4
	guppy_run_mode			= 'cuda:0'

	// guppy plex setting
	seq_len				= 350

	//medaka settings
	medaka_model				= 'r941_min_fast_g303'
	medaka_normalise		= 200 					//default value by medaka

	 schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        fastcat_stats = true
        example_cmd = [
            "--fastq test_data/reads.fastq.gz"
        ]
        container_sha = "shaee16e78afd054a8cec95a293277f113abba597e5"
        agent = null
    }
}

conda {
	conda.enabled				= true
	docker.enabled			= false
	singularity.enabled	= false
	podman.enabled			= false
	shifter.enabled			= false
	charliecloud.enabled= false
	apptainer.enabled		= false
}

manifest {

    name							= 'RAGE-toolkit/Artic-nf'
    author						= 'RAGE-toolkit'
    homePage					= 'https://github.com/RAGE-toolkit/Artic-nf'
    description				= 'Basecalling and consensus alignment'
    mainScript				= 'main.nf'
    nextflowVersion		= '23.10.0'
    version						= 'v1.0.0'

}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wftemplate {
        container = "ontresearch/wf-template:${params.wf.container_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wftemplate {
                container = "${params.aws_image_prefix}-wf-template:${params.wf.container_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}


